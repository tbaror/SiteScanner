# Generated by Django 3.2.4 on 2021-06-20 13:28

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scanmodule', '0002_scanhistory_scan_rank'),
    ]

    operations = [
        migrations.CreateModel(
            name='PortDiscovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_protocol', models.CharField(blank=True, max_length=50)),
                ('portid', models.IntegerField(blank=True, null=True)),
                ('port_stat', models.CharField(blank=True, max_length=50)),
                ('port_scanned_method', models.CharField(blank=True, max_length=50)),
                ('port_scanned_ttle', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PortServiceDsocovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, max_length=50)),
                ('service_product', models.CharField(blank=True, max_length=100)),
                ('Service_version', models.CharField(blank=True, max_length=100)),
                ('service_extrainfo', models.CharField(blank=True, max_length=200)),
                ('service_os_related', models.CharField(blank=True, max_length=50)),
                ('service_method_scanned', models.CharField(blank=True, max_length=50)),
                ('conf', models.CharField(blank=True, max_length=50)),
                ('service_cpe', models.CharField(blank=True, max_length=100)),
                ('portid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanmodule.portdiscovery')),
            ],
        ),
        migrations.AddField(
            model_name='siteassest',
            name='nmap_version',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='siteassest',
            name='scan_args',
            field=models.CharField(blank=True, max_length=250),
        ),
        migrations.AddField(
            model_name='siteassest',
            name='scan_elapsed',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='siteassest',
            name='scan_exit_resault',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='siteassest',
            name='scan_time_end',
            field=models.DateField(default=datetime.date.today),
        ),
        migrations.AddField(
            model_name='siteassest',
            name='scan_time_start',
            field=models.DateField(default=datetime.date.today),
        ),
        migrations.AddField(
            model_name='siteassest',
            name='scan_timestr_end',
            field=models.CharField(blank=True, max_length=250),
        ),
        migrations.AddField(
            model_name='siteassest',
            name='scan_timestr_start',
            field=models.CharField(blank=True, max_length=250),
        ),
        migrations.CreateModel(
            name='ServiceScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_service', models.CharField(blank=True, max_length=100)),
                ('banner_raw', models.CharField(blank=True, max_length=100)),
                ('script_name', models.CharField(blank=True, max_length=100)),
                ('raw_output', models.CharField(blank=True, max_length=500)),
                ('cve_cpe', models.CharField(blank=True, max_length=200)),
                ('is_exploit', models.BooleanField()),
                ('cve_type', models.CharField(blank=True, max_length=100)),
                ('cvss', models.IntegerField(blank=True, null=True)),
                ('cve_id', models.CharField(blank=True, max_length=200)),
                ('cve_url', models.URLField(blank=True)),
                ('service_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanmodule.portservicedsocovery')),
            ],
        ),
        migrations.AddField(
            model_name='portdiscovery',
            name='host_ip_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanmodule.siteassest'),
        ),
        migrations.CreateModel(
            name='HostScanned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip_name', models.CharField(blank=True, max_length=250)),
                ('resolved_hostname', models.CharField(blank=True, max_length=250)),
                ('resolve_type', models.CharField(blank=True, max_length=250)),
                ('mac_address', models.CharField(blank=True, max_length=250)),
                ('mac_addr_type', models.CharField(blank=True, max_length=250)),
                ('mac_vendor', models.CharField(blank=True, max_length=250)),
                ('host_state', models.CharField(blank=True, max_length=50)),
                ('host_state_method', models.CharField(blank=True, max_length=50)),
                ('host_state_ttl', models.CharField(blank=True, max_length=50)),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanmodule.siteassest')),
            ],
        ),
        migrations.CreateModel(
            name='HostOsScanned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os_type', models.CharField(blank=True, max_length=50)),
                ('os_accuracy', models.CharField(blank=True, max_length=50)),
                ('host_ip_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanmodule.siteassest')),
            ],
        ),
    ]
